{"version":3,"sources":["components/MermaidBlock.module.scss","components/RichTextInput.module.scss","components/CodeBlock.module.scss","components/Previewer.module.scss","components/Layout.module.scss","components/Gutter.module.scss","../node_modules/moment-mini/locale sync /^/.//.*$","components/CodeBlock.js","components/MermaidBlock.js","components/Previewer.js","components/RichTextInput.js","components/Gutter.js","components/Layout.js","index.js","App.js"],"names":["module","exports","map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","CodeBlock","language","value","rootStyle","backgroundColor","padding","borderRadius","maxWidth","whiteSpace","wordWrap","footerStyle","color","textAlign","style","okaidia","className","styles","MermaidBlock","chart","useState","error","setError","useEffect","mermaid","initialize","startOnLoad","theme","contentLoaded","message","mermaidBlock","MarkdownRender","props","newProps","plugins","RemarkMathPlugin","renderers","link","href","children","target","rel","math","Node","inlineMath","inline","toLowerCase","Context","input","escapeHtml","root","RichTextInput","updatePreview","toggleState","editorState","setEditorState","editor","setEditor","timeoutHandler","setTimeout","length","clearTimeout","refresh","console","log","onClick","focus","editorDidMount","options","mode","lineNumbers","lineWrapping","indentWithTabs","smartIndent","autofocus","highlightFormatting","fencedCodeBlockHighlighting","onBeforeChange","data","onChange","Gutter","toggleEditor","togglePreview","isEditorShown","isPreviewShown","toggleBoth","button","Layout","text","setText","setIsEditorShown","setIsPreviewShown","display","gridTemplateColumns","justifyContent","scrollContainer","editorContainer","previewerContainer","Previewer","source","p","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.c190b183.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"mermaidBlock\":\"MermaidBlock_mermaidBlock__16OLO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"RichTextInput_root__2gwjm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"CodeBlock_root__2fflh\",\"code\":\"CodeBlock_code__2Ikpb\",\"footer\":\"CodeBlock_footer__S_o5Q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Previewer_root__mnizv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"toolbar\":\"Layout_toolbar__3uLQf\",\"scrollContainer\":\"Layout_scrollContainer__3czLl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Gutter_root__2Wla6\",\"button\":\"Gutter_button__1V1K8\"};","var map = {\n\t\"./locale\": 263,\n\t\"./locale.js\": 263\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 826;","import React from 'react'\nimport { Prism as SyntaxHighlighter } from 'react-syntax-highlighter'\nimport { solarizedlight, okaidia } from 'react-syntax-highlighter/dist/esm/styles/prism'\nimport styles from './CodeBlock.module.scss'\n\nexport default function CodeBlock({language, value}) {\n    const theme = 'dark'\n\n    const rootStyle = {\n        backgroundColor: theme === 'light' ? '#fdf6e3' : '#272822',\n        padding: '0 10px 5px 0',\n        borderRadius: '5px',\n        maxWidth: '100%',\n        whiteSpace: 'pre-wrap',\n        wordWrap: 'break-word'\n    }\n\n    const footerStyle = {\n        color: theme === 'light' ? '#121212' : '#fafafa',\n        textAlign: 'right'\n    }\n\n    return (\n        <div style={rootStyle}>\n            <SyntaxHighlighter language={language} style={theme === 'light' ? solarizedlight : okaidia} className={styles.code}>\n                {value}\n            </SyntaxHighlighter>\n            <div style={footerStyle}>\n                <small><em>{language}</em></small>\n            </div>\n        </div>\n    )\n}\n","import React, { useEffect, useState } from 'react'\nimport mermaid from 'mermaid'\nimport styles from './MermaidBlock.module.scss'\n\nexport default function MermaidBlock({chart}) {\n    const [error, setError] = useState(null)\n    // we use a useLayoutEffect here so that the user does not see the repaint everytime he updates something\n    useEffect(() => {\n        try {\n            if (!chart) return\n            mermaid.initialize({\n                startOnLoad: true,\n                theme: \"forest\"\n            })\n            mermaid.contentLoaded()\n        } catch(e) {\n            setError(e.message)\n        }\n    }, [chart])\n\n    return chart ? (\n            <div className={`${styles.mermaidBlock} mermaid`}>\n                {error ? <pre>{error}</pre> : chart}\n            </div>\n        ) : (\n            <div className={styles.mermaidBlock}>\n            </div>\n        )\n            \n    \n}\n","import React from \"react\";\nimport ReactMarkdown from \"react-markdown\";\nimport MathJax from \"react-mathjax2\";\nimport RemarkMathPlugin from 'remark-math';\nimport CodeBlock from './CodeBlock'\nimport styles from './Previewer.module.scss'\nimport MermaidBlock from './MermaidBlock'\n\nconst MarkdownRender = (props) => {\n    const newProps = {\n        ...props,\n        plugins: [\n            RemarkMathPlugin\n        ],\n        renderers: {\n            ...props.renderers,\n            link: ({href, children}) => <a href={href} target=\"_blank\" rel=\"noopener noreferrer\">{children}</a>,\n            math: ({value}) => <MathJax.Node>{value}</MathJax.Node>,\n            inlineMath: ({value}) => <MathJax.Node inline>{value}</MathJax.Node>,\n            code: ({language, value}) => {\n                if (language && language.toLowerCase() === 'mermaid') return <MermaidBlock className=\"mermaid\" chart={value}/>\n                return <CodeBlock language={language ? language.toLowerCase() : language} value={value} />\n            }\n        }\n    };\n    \n    return (\n        <MathJax.Context input=\"tex\">\n            <ReactMarkdown \n                {...newProps} \n                escapeHtml={true} \n                className={styles.root}\n            />\n        </MathJax.Context>\n    );\n};\n\nexport default MarkdownRender\n","import React, {useState, useEffect} from 'react'\nimport styles from './RichTextInput.module.scss'\nimport {Controlled as CodeMirror} from 'react-codemirror2'\n\nimport 'codemirror/theme/material.css';\nimport 'codemirror/mode/markdown/markdown'\n\n// toggle state is a combination of the isEditorShown and isPreviewShown\n// if either one changes, toggleState will change\n/**\n * \n * @param {*} props \n * @param {function} props.updatePreview\n * @param {string} props.toggleState - A combination of isEditorShown state and isPreviewShown state \n */\nexport default function RichTextInput({updatePreview, toggleState}) {\n    const [editorState, setEditorState] = useState('')\n    const [editor, setEditor] = useState(null) // editor instance\n\n    const options = {\n        mode: 'markdown',\n        theme: 'material',\n        lineNumbers: true,\n        lineWrapping: true,\n        indentWithTabs: true,\n        smartIndent: true,\n        autofocus: true,\n        highlightFormatting: true,\n        fencedCodeBlockHighlighting: true\n    }\n\n    const handleChange = (editor, data, value) => {\n        setEditorState(value)\n    }\n\n    useEffect(() => {\n        const timeoutHandler = setTimeout(() => {\n            updatePreview(editorState)\n        }, editorState.length / 100)\n        return () => {\n            clearTimeout(timeoutHandler)\n        };\n    }, [editorState, updatePreview])\n\n    useEffect(() => {\n        if (editor) {\n            editor.refresh()\n            console.log('refresh')\n        }\n    }, [toggleState, editor])\n\n    return (\n        <div className={styles.root} onClick={() => editor.focus()}>\n            <CodeMirror \n            editorDidMount={editor => setEditor(editor)}\n            className={styles.editor}\n            value={editorState}\n            options={options}\n            onBeforeChange={(editor, data, value) => setEditorState(value)}\n            onChange={handleChange}\n            />\n        </div>\n    )\n}","import React from 'react'\nimport styles from './Gutter.module.scss'\n\nexport default function Gutter({toggleEditor, togglePreview, isEditorShown, isPreviewShown, toggleBoth}) {\n    return (\n        <ul className={styles.root}>\n            {isPreviewShown ? <li><button className={styles.button} onClick={toggleEditor}>{isEditorShown ? '<' : '>'}</button></li> : null}\n            {isEditorShown ? <li><button className={styles.button} onClick={togglePreview}>{isPreviewShown ? '>' : '<'}</button></li> : null}\n            <li><button className={styles.button} onClick={toggleBoth}>Toggle</button></li>\n            <li><button className={styles.button}>Save</button></li>\n        </ul>\n    )\n}\n","import React, {useState} from 'react'\nimport styles from './Layout.module.scss'\nimport Previewer from './Previewer'\nimport RichTextInput from './RichTextInput'\nimport Gutter from './Gutter'\nimport { ScrollSync , ScrollSyncPane } from 'react-scroll-sync'\n\nexport default function Layout() {\n    const [text, setText] = useState('');\n\n    const updatePreview = text => {\n        setText(text)\n        console.log('updarte')\n    }\n\n    const [isEditorShown, setIsEditorShown] = useState(true)\n    const toggleEditor = () => {\n        setIsEditorShown(p => !p);\n    }\n\n    const [isPreviewShown, setIsPreviewShown] = useState(true)\n    const togglePreview = () => {\n        setIsPreviewShown(p => !p);\n    }\n\n    const toggleBoth = () => {\n        if (isEditorShown === isPreviewShown) {\n            setIsEditorShown(true)\n            setIsPreviewShown(false)\n            return\n        }\n\n        setIsEditorShown(p => !p);\n        setIsPreviewShown(p => !p);\n        return\n    }\n\n    const rootContainerStyles = () => {\n        let gtc;\n        if (isEditorShown && isPreviewShown) {\n            gtc = '1fr 1fr auto'\n        } else if (isEditorShown && !isPreviewShown) {\n            gtc = '1fr auto'\n        } else if (!isEditorShown && isPreviewShown) {\n            gtc = '1fr auto'\n        } else {\n            gtc = 'auto'\n        }\n\n        return {\n            display: 'grid',\n            gridTemplateColumns: gtc,\n            justifyContent: 'stretch'\n        }\n    }\n\n    return (\n        <ScrollSync className={styles.root}>\n            <div style={rootContainerStyles()}>\n                <ScrollSyncPane>\n                    <div className={`${styles.scrollContainer} ${styles.editorContainer}`} style={{display: isEditorShown ? 'block' : 'none'}}>\n                        <RichTextInput updatePreview={updatePreview} toggleState={`${isPreviewShown} ${isEditorShown}`} />\n                    </div>\n                </ScrollSyncPane>\n                <ScrollSyncPane>\n                    <div className={`${styles.scrollContainer} ${styles.previewerContainer}`} style={{display: isPreviewShown ? 'block' : 'none'}}>\n                        {isPreviewShown ? <Previewer source={text} /> : null}\n                    </div>\n                </ScrollSyncPane>\n                <Gutter \n                    toggleEditor={toggleEditor} \n                    togglePreview={togglePreview} \n                    isEditorShown={isEditorShown} \n                    isPreviewShown={isPreviewShown}\n                    toggleBoth={toggleBoth}\n                />\n            </div>\n        </ScrollSync>\n    )\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.querySelector('#root'))","import React from 'react'\nimport Layout from './components/Layout'\nimport './App.scss'\nimport 'codemirror/lib/codemirror.css';\nimport './cmOverride.scss'\n\nexport default function App() {\n    return (\n        <div>\n            <Layout />\n        </div>\n    )\n}\n"],"sourceRoot":""}