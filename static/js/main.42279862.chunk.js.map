{"version":3,"sources":["components/Gutter.module.scss","components/RichTextInput.module.scss","components/CodeBlock.js","components/Previewer.js","components/RichTextInput.js","components/Gutter.js","components/Layout.js","index.js","App.js","components/CodeBlock.module.scss","components/Previewer.module.scss","components/Layout.module.scss"],"names":["module","exports","CodeBlock","language","value","rootStyle","backgroundColor","padding","borderRadius","maxWidth","whiteSpace","wordWrap","footerStyle","color","textAlign","style","okaidia","className","styles","code","MarkdownRender","props","newProps","plugins","RemarkMathPlugin","renderers","math","Node","inlineMath","inline","Context","input","escapeHtml","root","RichTextInput","updatePreview","useState","editorState","setEditorState","editor","setEditor","onClick","focus","editorDidMount","options","mode","theme","lineNumbers","lineWrapping","indentWithTabs","smartIndent","autofocus","highlightFormatting","fencedCodeBlockHighlighting","onBeforeChange","data","onChange","Gutter","toggleEditor","togglePreview","isEditorShown","isPreviewShown","button","Layout","text","setText","setIsEditorShown","setIsPreviewShown","display","gridTemplateColumns","justifyContent","scrollContainer","editorContainer","previewerContainer","Previewer","source","p","ReactDOM","render","document","querySelector"],"mappings":"gHACAA,EAAOC,QAAU,CAAC,KAAO,qBAAqB,OAAS,yB,mBCAvDD,EAAOC,QAAU,CAAC,KAAO,8B,uPCMV,SAASC,EAAT,GAAuC,IAAnBC,EAAkB,EAAlBA,SAAUC,EAAQ,EAARA,MAGnCC,EAAY,CACdC,gBAAiD,UACjDC,QAAS,eACTC,aAAc,MACdC,SAAU,OACVC,WAAY,WACZC,SAAU,cAGRC,EAAc,CAChBC,MAAuC,UACvCC,UAAW,SAGf,OACI,yBAAKC,MAAOV,GACR,kBAAC,IAAD,CAAmBF,SAAUA,EAAUY,MAA4CC,IAASC,UAAWC,IAAOC,MACzGf,GAEL,yBAAKW,MAAOH,GACR,+BAAO,4BAAKT,M,qBCIbiB,EA3BQ,SAACC,GACpB,IAAMC,EAAQ,eACPD,EADO,CAEVE,QAAS,CACLC,KAEJC,UAAU,eACHJ,EAAMI,UADJ,CAELC,KAAM,gBAAEtB,EAAF,EAAEA,MAAF,OAAa,kBAAC,IAAQuB,KAAT,KAAevB,IAClCwB,WAAY,gBAAExB,EAAF,EAAEA,MAAF,OAAa,kBAAC,IAAQuB,KAAT,CAAcE,QAAM,GAAEzB,IAC/Ce,KAAM,YAAwB,IAAtBhB,EAAqB,EAArBA,SAAUC,EAAW,EAAXA,MACd,OAAO,kBAACF,EAAD,CAAWC,SAAUA,EAAUC,MAAOA,SAKzD,OACI,kBAAC,IAAQ0B,QAAT,CAAiBC,MAAM,OACnB,kBAAC,IAAD,iBACQT,EADR,CAEIU,YAAY,EACZf,UAAWC,IAAOe,U,uCCrBnB,SAASC,EAAT,GAAyC,IAAjBC,EAAgB,EAAhBA,cAAgB,EACbC,mBAAS,IADI,mBAC5CC,EAD4C,KAC/BC,EAD+B,OAEvBF,mBAAS,MAFc,mBAE5CG,EAF4C,KAEpCC,EAFoC,KAqBnD,OACI,yBAAKvB,UAAWC,IAAOe,KAAMQ,QAAS,kBAAMF,EAAOG,UAC/C,kBAAC,aAAD,CACAC,eAAgB,SAAAJ,GAAM,OAAIC,EAAUD,IACpCtB,UAAWC,IAAOqB,OAClBnC,MAAOiC,EACPO,QAvBQ,CACZC,KAAM,WACNC,MAAO,WACPC,aAAa,EACbC,cAAc,EACdC,gBAAgB,EAChBC,aAAa,EACbC,WAAW,EACXC,qBAAqB,EACrBC,6BAA6B,GAezBC,eAAgB,SAACf,EAAQgB,EAAMnD,GAAf,OAAyBkC,EAAelC,IACxDoD,SAba,SAACjB,EAAQgB,EAAMnD,GAChCkC,EAAelC,GACf+B,EAAc/B,O,qBCtBP,SAASqD,EAAT,GAA+E,IAA9DC,EAA6D,EAA7DA,aAAcC,EAA+C,EAA/CA,cAAeC,EAAgC,EAAhCA,cAAeC,EAAiB,EAAjBA,eACxE,OACI,wBAAI5C,UAAWC,IAAOe,MACjB4B,EAAiB,4BAAI,4BAAQ5C,UAAWC,IAAO4C,OAAQrB,QAASiB,GAAeE,EAAgB,IAAM,MAAqB,KAC1HA,EAAgB,4BAAI,4BAAQ3C,UAAWC,IAAO4C,OAAQrB,QAASkB,GAAgBE,EAAiB,IAAM,MAAqB,KAC5H,4BAAI,4BAAQ5C,UAAWC,IAAO4C,QAA1B,U,YCDD,SAASC,IAAU,IAAD,EACL3B,mBAAS,IADJ,mBACtB4B,EADsB,KAChBC,EADgB,OAOa7B,oBAAS,GAPtB,mBAOtBwB,EAPsB,KAOPM,EAPO,OAYe9B,oBAAS,GAZxB,mBAYtByB,EAZsB,KAYNM,EAZM,KAoC7B,OACI,kBAAC,aAAD,CAAYlD,UAAWC,IAAOe,MAC1B,yBAAKlB,MATF,CACHqD,QAAS,OACTC,oBAZAT,GAAiBC,EACX,eACCD,IAAkBC,EACnB,YACED,GAAiBC,EACnB,WAEA,OAMNS,eAAgB,YAOZ,kBAAC,iBAAD,KACI,yBAAKrD,UAAS,UAAKC,IAAOqD,gBAAZ,YAA+BrD,IAAOsD,iBAAmBzD,MAAO,CAACqD,QAASR,EAAgB,QAAU,SAC9G,kBAAC1B,EAAD,CAAeC,cAtCb,SAAA6B,GAClBC,EAAQD,QAwCA,kBAAC,iBAAD,KACI,yBAAK/C,UAAS,UAAKC,IAAOqD,gBAAZ,YAA+BrD,IAAOuD,oBAAsB1D,MAAO,CAACqD,QAASP,EAAiB,QAAU,SAClH,kBAACa,EAAD,CAAWC,OAAQX,MAG3B,kBAACP,EAAD,CACIC,aA1CK,WACjBQ,GAAiB,SAAAU,GAAC,OAAKA,MA0CXjB,cAtCM,WAClBQ,GAAkB,SAAAS,GAAC,OAAKA,MAsCZhB,cAAeA,EACfC,eAAgBA,M,qBCxDpCgB,IAASC,OAAO,mBCED,WACX,OACI,6BACI,kBAACf,EAAD,SDLI,MAASgB,SAASC,cAAc,W,mBEHhDhF,EAAOC,QAAU,CAAC,KAAO,wBAAwB,KAAO,wBAAwB,OAAS,4B,mBCAzFD,EAAOC,QAAU,CAAC,KAAO,0B,uDCAzBD,EAAOC,QAAU,CAAC,QAAU,wBAAwB,gBAAkB,mC","file":"static/js/main.42279862.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Gutter_root__2UKma\",\"button\":\"Gutter_button__3Hu4L\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"RichTextInput_root___cHgN\"};","import React from 'react'\r\nimport { Prism as SyntaxHighlighter } from 'react-syntax-highlighter'\r\nimport { solarizedlight, okaidia } from 'react-syntax-highlighter/dist/esm/styles/prism'\r\nimport styles from './CodeBlock.module.scss'\r\n\r\n\r\n\r\nexport default function CodeBlock({language, value}) {\r\n    const theme = 'dark'\r\n\r\n    const rootStyle = {\r\n        backgroundColor: theme === 'light' ? '#fdf6e3' : '#272822',\r\n        padding: '0 10px 5px 0',\r\n        borderRadius: '5px',\r\n        maxWidth: '100%',\r\n        whiteSpace: 'pre-wrap',\r\n        wordWrap: 'break-word'\r\n    }\r\n\r\n    const footerStyle = {\r\n        color: theme === 'light' ? '#121212' : '#fafafa',\r\n        textAlign: 'right'\r\n    }\r\n\r\n    return (\r\n        <div style={rootStyle}>\r\n            <SyntaxHighlighter language={language} style={theme === 'light' ? solarizedlight : okaidia} className={styles.code}>\r\n                {value}\r\n            </SyntaxHighlighter>\r\n            <div style={footerStyle}>\r\n                <small><em>{language}</em></small>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport ReactMarkdown from \"react-markdown\";\r\nimport MathJax from \"react-mathjax2\";\r\nimport RemarkMathPlugin from 'remark-math';\r\nimport CodeBlock from './CodeBlock'\r\nimport styles from './Previewer.module.scss'\r\n\r\nconst MarkdownRender = (props) => {\r\n    const newProps = {\r\n        ...props,\r\n        plugins: [\r\n            RemarkMathPlugin,\r\n        ],\r\n        renderers: {\r\n            ...props.renderers,\r\n            math: ({value}) => <MathJax.Node>{value}</MathJax.Node>,\r\n            inlineMath: ({value}) => <MathJax.Node inline>{value}</MathJax.Node>,\r\n            code: ({language, value}) => {\r\n                return <CodeBlock language={language} value={value} />\r\n            }\r\n        }\r\n    };\r\n    \r\n    return (\r\n        <MathJax.Context input=\"tex\">\r\n            <ReactMarkdown \r\n                {...newProps} \r\n                escapeHtml={true} \r\n                className={styles.root}\r\n            />\r\n        </MathJax.Context>\r\n    );\r\n};\r\n\r\nexport default MarkdownRender\r\n","import React, {useState} from 'react'\r\nimport styles from './RichTextInput.module.scss'\r\nimport {Controlled as CodeMirror} from 'react-codemirror2'\r\n\r\nimport 'codemirror/theme/material.css';\r\nimport 'codemirror/mode/markdown/markdown'\r\n\r\nexport default function RichTextInput({updatePreview}) {\r\n    const [editorState, setEditorState] = useState('')\r\n    const [editor, setEditor] = useState(null)\r\n\r\n    const options = {\r\n        mode: 'markdown',\r\n        theme: 'material',\r\n        lineNumbers: true,\r\n        lineWrapping: true,\r\n        indentWithTabs: true,\r\n        smartIndent: true,\r\n        autofocus: true,\r\n        highlightFormatting: true,\r\n        fencedCodeBlockHighlighting: true\r\n    }\r\n\r\n    const handleChange = (editor, data, value) => {\r\n        setEditorState(value)\r\n        updatePreview(value)\r\n    }\r\n\r\n    return (\r\n        <div className={styles.root} onClick={() => editor.focus()}>\r\n            <CodeMirror \r\n            editorDidMount={editor => setEditor(editor)}\r\n            className={styles.editor}\r\n            value={editorState}\r\n            options={options}\r\n            onBeforeChange={(editor, data, value) => setEditorState(value)}\r\n            onChange={handleChange}\r\n            />\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport styles from './Gutter.module.scss'\r\n\r\nexport default function Gutter({toggleEditor, togglePreview, isEditorShown, isPreviewShown}) {\r\n    return (\r\n        <ul className={styles.root}>\r\n            {isPreviewShown ? <li><button className={styles.button} onClick={toggleEditor}>{isEditorShown ? '<' : '>'}</button></li> : null}\r\n            {isEditorShown ? <li><button className={styles.button} onClick={togglePreview}>{isPreviewShown ? '>' : '<'}</button></li> : null}\r\n            <li><button className={styles.button}>Save</button></li>\r\n        </ul>\r\n    )\r\n}\r\n","import React, {useState} from 'react'\r\nimport styles from './Layout.module.scss'\r\nimport Previewer from './Previewer'\r\nimport RichTextInput from './RichTextInput'\r\nimport Gutter from './Gutter'\r\nimport { ScrollSync , ScrollSyncPane } from 'react-scroll-sync'\r\n\r\nexport default function Layout() {\r\n    const [text, setText] = useState('');\r\n\r\n    const updatePreview = text => {\r\n        setText(text)\r\n    }\r\n\r\n    const [isEditorShown, setIsEditorShown] = useState(true)\r\n    const toggleEditor = () => {\r\n        setIsEditorShown(p => !p);\r\n    }\r\n\r\n    const [isPreviewShown, setIsPreviewShown] = useState(true)\r\n    const togglePreview = () => {\r\n        setIsPreviewShown(p => !p);\r\n    }\r\n\r\n    const rootContainerStyles = () => {\r\n        let gtc;\r\n        if (isEditorShown && isPreviewShown) {\r\n            gtc = '1fr 1fr auto'\r\n        } else if (isEditorShown && !isPreviewShown) {\r\n            gtc = '1fr auto'\r\n        } else if (!isEditorShown && isPreviewShown) {\r\n            gtc = '1fr auto'\r\n        } else {\r\n            gtc = 'auto'\r\n        }\r\n\r\n        return {\r\n            display: 'grid',\r\n            gridTemplateColumns: gtc,\r\n            justifyContent: 'stretch'\r\n        }\r\n    }\r\n\r\n    return (\r\n        <ScrollSync className={styles.root}>\r\n            <div style={rootContainerStyles()}>\r\n                <ScrollSyncPane>\r\n                    <div className={`${styles.scrollContainer} ${styles.editorContainer}`} style={{display: isEditorShown ? 'block' : 'none'}}>\r\n                        <RichTextInput updatePreview={updatePreview} />\r\n                    </div>\r\n                </ScrollSyncPane>\r\n                <ScrollSyncPane>\r\n                    <div className={`${styles.scrollContainer} ${styles.previewerContainer}`} style={{display: isPreviewShown ? 'block' : 'none'}}>\r\n                        <Previewer source={text} />\r\n                    </div>\r\n                </ScrollSyncPane>\r\n                <Gutter \r\n                    toggleEditor={toggleEditor} \r\n                    togglePreview={togglePreview} \r\n                    isEditorShown={isEditorShown} \r\n                    isPreviewShown={isPreviewShown}\r\n                />\r\n            </div>\r\n        </ScrollSync>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\n\r\nReactDOM.render(<App />, document.querySelector('#root'))","import React from 'react'\r\nimport Layout from './components/Layout'\r\nimport './App.scss'\r\nimport 'codemirror/lib/codemirror.css';\r\nimport './cmOverride.scss'\r\n\r\nexport default function App() {\r\n    return (\r\n        <div>\r\n            <Layout />\r\n        </div>\r\n    )\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"CodeBlock_root__SrJzM\",\"code\":\"CodeBlock_code__JAIR4\",\"footer\":\"CodeBlock_footer__3chsi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Previewer_root__1ONgP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"toolbar\":\"Layout_toolbar__w4AJu\",\"scrollContainer\":\"Layout_scrollContainer__34taz\"};"],"sourceRoot":""}